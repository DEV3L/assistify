name: End to End Integration
on:
  push:
    branches:
      - main

jobs:
  # Deploy to Fly
  deploy-to-fly:
    runs-on: ubuntu-latest
    environment: CI

    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

    defaults:
      run:
        working-directory: ./assistify-api

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install hatch
          hatch env create

      - name: Unit tests
        run: |
          hatch run test

      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only --app assistify-api-ci

  # Deploy to Vercel
  deploy-to-vercel:
    runs-on: ubuntu-latest
    environment: CI

    env:
      # Vercel Deployment Secrets
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    defaults:
      run:
        working-directory: ./assistify-ui

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build project
        run: yarn build

      - name: Run tests
        run: |
          yarn upgrade
          yarn test:ci

      - name: Deploy to Vercel
        run: |
          vercel link --yes --project assistify-ui-ci --token=${{ secrets.VERCEL_ACCESS_TOKEN }}
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_ACCESS_TOKEN }}
          vercel build --prod --token=${{ secrets.VERCEL_ACCESS_TOKEN }}
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_ACCESS_TOKEN }}

  # Run end-to-end tests
  run-e2e-tests:
    runs-on: ubuntu-latest
    environment: CI

    needs: [deploy-to-fly, deploy-to-vercel]

    env:
      # Playwright Test Secrets
      BASE_URL: ${{ secrets.VERCEL_BASE_URL }}
      GOOGLE_TEST_NAME: ${{ secrets.GOOGLE_TEST_NAME }}
      GOOGLE_TEST_EMAIL: ${{ secrets.GOOGLE_TEST_EMAIL }}
      GOOGLE_TEST_PASSWORD: ${{ secrets.GOOGLE_TEST_PASSWORD }}
    defaults:
      run:
        working-directory: ./assistify-ui

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Install Playwright and Chromium
        run: |
          yarn add playwright
          npx playwright install chromium

      - name: Save CI session storage state
        run: echo "${{ secrets.CI_STORAGE_STATE }}" | base64 --decode > storageState.json

      - name: Run end-to-end tests
        run: yarn test:e2e

      - name: Upload Playwright screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-screenshots
          path: assistify-ui/test-results/
